// Define the 'commonapi' package.
package commonapi


// Define the 'CANSender' interface.
interface CANSender {
  version {major 1 minor 0} // Interface version information.
}


// Define the 'PiracerSender' interface.
interface PiracerSender {
  version {major 1 minor 0} // Interface version information.
}


// Define the 'PiracerController' interface.
interface PiracerController {
  version {major 1 minor 0} // Interface version information.
}


// Define the 'IPCManager' interface.
interface IPCManager {
  version {major 1 minor 0} // Interface version information.

  // Define methods for various functionalities with input and output parameters.
  method setSensorRpm {
    in {
      UInt16 SensorRpm // Input parameter: SensorRpm of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setBatteryLevel {
    in {
      UInt16 BatteryLevel // Input parameter: BatteryLevel of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setGearMode {
    in {
      UInt16 GearMode // Input parameter: GearMode of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setDirection {
    in {
      UInt16 Direction // Input parameter: Direction of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setLight {
    in {
      String Light // Input parameter: Light of type String.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setThrottle {
    in {
      Double Throttle // Input parameter: Throttle of type Double.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setSteering {
    in {
      Double Steering // Input parameter: Steering of type Double.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setDistance {
    in {
      UInt16 Distance // Input parameter: Distance of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method getGearMode {
    in {
      String message1 // Input parameter: message of type String.
    }
    out {
      String message2 // Output parameter: message of type String.
    }
  }
  method getDirection {
    in {
      String message1 // Input parameter: message of type String.
    }
    out {
      String message2 // Output parameter: message of type String.
    }
  }
  method getLight {
    in {
      String message1 // Input parameter: message of type String.
    }
    out {
      String message2 // Output parameter: message of type String.
    }
  }
  method getSteering {
    in {
      String message1 // Input parameter: message of type String.
    }
    out {
      String message2 // Output parameter: message of type String.
    }
  }
}


// Define the 'InstrumentCluster' interface.
interface InstrumentCluster {
  version {major 1 minor 0} // Interface version information.

  // Define methods for various functionalities with input and output parameters.
  method setSpeedRpm {
    in {
      UInt16 SensorRpm // Input parameter: SensorRpm of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setBattery {
    in {
      UInt16 Battery // Input parameter: Battery of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setGear {
    in {
      UInt16 Gear // Input parameter: Gear of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setDirection {
    in {
      UInt16 Direction // Input parameter: Direction of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setLight {
    in {
      String Light // Input parameter: Light of type String.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
}


// Define the 'HeadUnit' interface.
interface HeadUnit {
  version {major 1 minor 0} // Interface version information.

  // Define methods for various functionalities with input and output parameters.
  method setSensorRpm {
    in {
      UInt16 SensorRpm // Input parameter: SensorRpm of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setGear {
    in {
      UInt16 Gear // Input parameter: Gear of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setDirection {
    in {
      UInt16 Direction // Input parameter: Direction of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setLight {
    in {
      String Light // Input parameter: Light of type String.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
}

// Define the 'PDCUnit' interface.
interface PDCUnit {
  version {major 1 minor 0} // Interface version information.

  // Define methods for various functionalities with input and output parameters.
  method setDistance {
    in {
      UInt16 Distance // Input parameter: Distance of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setSteering {
    in {
      Double Steering // Input parameter: Steering of type Double.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
}

// Define the 'IVICompositor' interface.
interface IVICompositor {
  version {major 1 minor 0} // Interface version information.

  // Define methods for various functionalities with input and output parameters.
  method setGear {
    in {
      UInt16 Gear // Input parameter: Gear of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
}

// Define the 'Speaker' interface.
interface RemoteSpeaker {
  version {major 1 minor 0} // Interface version information.

  // Define methods for various functionalities with input and output parameters.
  method setGear {
    in {
      UInt16 Gear // Input parameter: Gear of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
  method setDistance {
    in {
      UInt16 Distance // Input parameter: Distance of type UInt16.
    }
    out {
      String message // Output parameter: message of type String.
    }
  }
}

